{"ast":null,"code":"var _jsxFileName = \"F:\\\\Web Development\\\\Rento\\\\component\\\\Banner\\\\Buildings\\\\Buildings.js\";\nimport React from \"react\";\nimport BuildingCard from \"./Building/Building-card\";\nimport { CardDeck } from 'reactstrap';\nimport css from './Buildings.css';\n\nconst Buildings = props => {\n  const cards = props.buildings.map(element => React.createElement(BuildingCard, {\n    key: element.id,\n    name: element.name,\n    rent: element.rent,\n    bhk: element.bhk,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }));\n  const cardDeck = [];\n  let cardGroup = [];\n\n  for (let i = 0; i < cards.length + 1; i++) {\n    if (cardGroup.length !== 3) {\n      cardGroup.push(cards[i]);\n    } else {\n      cardDeck.push(React.createElement(CardDeck, {\n        style: {\n          paddingBottom: '10px'\n        },\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, cardGroup));\n      cardGroup = [];\n      cardGroup.push(cards[i]);\n    }\n  }\n\n  if (cardGroup.length === 3) cardDeck.push(React.createElement(CardDeck, {\n    key: cardDeck.length + 2,\n    className: css.twoItems,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, cardGroup));else if (cardGroup.length === 2) cardDeck.push(React.createElement(CardDeck, {\n    key: cardDeck.length + 2,\n    className: css.singleItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, cardGroup));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, cardDeck);\n};\n\nexport default Buildings;","map":{"version":3,"sources":["F:\\Web Development\\Rento\\component\\Banner\\Buildings\\Buildings.js"],"names":["BuildingCard","CardDeck","css","Buildings","props","cards","buildings","map","element","id","name","rent","bhk","cardDeck","cardGroup","i","length","push","paddingBottom","twoItems","singleItem"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,0BAAzB;AACA,SAAQC,QAAR,QAAuB,YAAvB;AACA,OAAOC,GAAP,MAAgB,iBAAhB;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AACzB,QAAMC,KAAK,GAAGD,KAAK,CAACE,SAAN,CAAgBC,GAAhB,CAAoBC,OAAO,IACrC,oBAAC,YAAD;AACI,IAAA,GAAG,EAAEA,OAAO,CAACC,EADjB;AAEI,IAAA,IAAI,EAAID,OAAO,CAACE,IAFpB;AAGI,IAAA,IAAI,EAAIF,OAAO,CAACG,IAHpB;AAII,IAAA,GAAG,EAAIH,OAAO,CAACI,GAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADU,CAAd;AAQA,QAAMC,QAAQ,GAAG,EAAjB;AACA,MAAIC,SAAS,GAAG,EAAhB;;AACA,OAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACV,KAAK,CAACW,MAAN,GAAa,CAA7B,EAAgCD,CAAC,EAAjC,EAAqC;AACjC,QAAID,SAAS,CAACE,MAAV,KAAqB,CAAzB,EAA4B;AACxBF,MAAAA,SAAS,CAACG,IAAV,CAAeZ,KAAK,CAACU,CAAD,CAApB;AACH,KAFD,MAEO;AACHF,MAAAA,QAAQ,CAACI,IAAT,CAAc,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAE;AAACC,UAAAA,aAAa,EAAE;AAAhB,SAAjB;AAA0C,QAAA,GAAG,EAAEH,CAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmDD,SAAnD,CAAd;AACAA,MAAAA,SAAS,GAAG,EAAZ;AACAA,MAAAA,SAAS,CAACG,IAAV,CAAeZ,KAAK,CAACU,CAAD,CAApB;AACH;AACJ;;AACD,MAAID,SAAS,CAACE,MAAV,KAAqB,CAAzB,EACIH,QAAQ,CAACI,IAAT,CAAc,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEJ,QAAQ,CAACG,MAAT,GAAgB,CAA/B;AAAkC,IAAA,SAAS,EAAEd,GAAG,CAACiB,QAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4DL,SAA5D,CAAd,EADJ,KAEK,IAAIA,SAAS,CAACE,MAAV,KAAqB,CAAzB,EACDH,QAAQ,CAACI,IAAT,CAAc,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEJ,QAAQ,CAACG,MAAT,GAAgB,CAA/B;AAAkC,IAAA,SAAS,EAAEd,GAAG,CAACkB,UAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8DN,SAA9D,CAAd;AAEJ,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMD,QAAN,CADJ;AAGH,CA5BD;;AA8BA,eAAeV,SAAf","sourcesContent":["import BuildingCard from \"./Building/Building-card\";\r\nimport {CardDeck} from 'reactstrap';\r\nimport css from './Buildings.css';\r\n\r\nconst Buildings = (props) => {\r\n    const cards = props.buildings.map(element => (\r\n        <BuildingCard\r\n            key={element.id}\r\n            name = {element.name}\r\n            rent = {element.rent}\r\n            bhk = {element.bhk}\r\n        />\r\n    ));\r\n    const cardDeck = [];\r\n    let cardGroup = [];\r\n    for (let i=0; i<cards.length+1; i++) {\r\n        if (cardGroup.length !== 3) {\r\n            cardGroup.push(cards[i]);\r\n        } else {\r\n            cardDeck.push(<CardDeck style={{paddingBottom: '10px'}} key={i}>{cardGroup}</CardDeck>);\r\n            cardGroup = [];\r\n            cardGroup.push(cards[i]);\r\n        }\r\n    }\r\n    if (cardGroup.length === 3)\r\n        cardDeck.push(<CardDeck key={cardDeck.length+2} className={css.twoItems}>{cardGroup}</CardDeck>);\r\n    else if (cardGroup.length === 2)\r\n        cardDeck.push(<CardDeck key={cardDeck.length+2} className={css.singleItem}>{cardGroup}</CardDeck>);\r\n\r\n    return (\r\n        <div>{cardDeck}</div>\r\n    );\r\n};\r\n\r\nexport default Buildings;"]},"metadata":{},"sourceType":"module"}