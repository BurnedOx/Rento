{"version":3,"file":"static/webpack/static\\development\\pages\\client-Dashboard.js.6b3e0d49b9ad6f712925.hot-update.js","sources":["webpack:///./component/CreateForm/CreateForm.js","webpack:///./pages/client-Dashboard.js"],"sourcesContent":["import {UncontrolledPopover, PopoverHeader, PopoverBody } from 'reactstrap';\r\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\n\r\nconst CreateForm = (props) => {\r\n    return (\r\n        <UncontrolledPopover placement={'bottom'} isOpen={props.open} target={'openForm'}>\r\n            <PopoverHeader>Create New</PopoverHeader>\r\n            <PopoverBody>\r\n                <Form>\r\n                    <FormGroup>\r\n                        <Label>BHK</Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            name={'bhk'}\r\n                            placeholder=\"How much bhk?\"\r\n                            value={props.value.bhk}\r\n                            onChange={props.changed} />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label>Square Ft.</Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            placeholder=\"how much square ft?\"\r\n                            name={'squareFt'}\r\n                            value={props.value.squareFt}\r\n                            onChange={props.changed}/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label>Floor</Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            placeholder=\"Floor\"\r\n                            name={'floor'}\r\n                            value={props.value.floor}\r\n                            onChange={props.changed}/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label>Rent</Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            placeholder=\"Rent\"\r\n                            name={\"rent\"}\r\n                            value={props.value.rent}\r\n                            onChange={props.changed}/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label>Location</Label>\r\n                        <Input\r\n                            type=\"text\"\r\n                            placeholder=\"Location\"\r\n                            name={\"location\"}\r\n                            value={props.value.location}\r\n                            onChange={props.changed}/>\r\n                    </FormGroup>\r\n                    <Button outline color=\"primary\" disabled={props.submitable} onClick={props.submit}>Submit</Button>{' '}\r\n                    <Button outline color=\"danger\" onClick={props.discard}>Discard</Button>\r\n                </Form>\r\n            </PopoverBody>\r\n        </UncontrolledPopover>\r\n    );\r\n};\r\nexport default CreateForm;","import Layout from \"../component/Layout/Layout\";\r\nimport Banner from \"../component/Banner/Banner\";\r\nimport CreateButton from \"../component/CreateButton/CreateButton\";\r\nimport CreateForm from \"../component/CreateForm/CreateForm\";\r\n\r\nconst cltDashboard = () => {\r\n    const [createState,setCreateState] = React.useState(false);\r\n    const [inputState, setInputState] = React.useState({});\r\n    const [creatable, setCreatable] = React.useState(true);\r\n    const [buildings, setBuildings] = React.useState([\r\n            {id:1,name:'gitanjali',bhk:'2 bhk',floor:4,squareFeet:500,rent:'2500/month',electricity:true},\r\n            {id:2,name:'gita',bhk:'2 bhk',floor:4,squareFeet:500,rent:'2500/month',electricity:true},\r\n            {id:3,name:'jali',bhk:'2 bhk',floor:4,squareFeet:500,rent:'2500/month',electricity:true},\r\n            {id:4,name:'gitanjali',bhk:'2 bhk',floor:4,squareFeet:500,rent:'2500/month',electricity:true},\r\n            {id:5,name:'gita',bhk:'2 bhk',floor:4,squareFeet:500,rent:'2500/month',electricity:true},\r\n            {id:6,name:'jali',bhk:'2 bhk',floor:4,squareFeet:500,rent:'2500/month',electricity:true},\r\n            {id:7,name:'jali',bhk:'2 bhk',floor:4,squareFeet:500,rent:'2500/month',electricity:true},\r\n            {id:8,name:'jali',bhk:'2 bhk',floor:4,squareFeet:500,rent:'2500/month',electricity:true},\r\n        ]);\r\n\r\n    React.useEffect(() => {\r\n        setInputState({\r\n            bhk: localStorage.getItem('bhk') ? localStorage.getItem('bhk') : '',\r\n            squareFt: localStorage.getItem('squareFt') ? localStorage.getItem('squareFt') : '',\r\n            floor: localStorage.getItem('floor') ? localStorage.getItem('floor') : '',\r\n            rent: localStorage.getItem('rent') ? localStorage.getItem('rent') : '',\r\n            location: localStorage.getItem('location') ? localStorage.getItem('location') : ''\r\n        });\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        for (let key in inputState) {\r\n            if(inputState[key] !== '') {\r\n                setCreatable(false);\r\n                break;\r\n            }\r\n        }\r\n    }, [inputState]);\r\n\r\n    const toggleHandler = () => setCreateState(!createState);\r\n\r\n    const onChangeHandler = (event) => {\r\n        localStorage.setItem(event.target.name, event.target.value);\r\n        setInputState({...inputState, [event.target.name]: [event.target.value]});\r\n    };\r\n\r\n    const discardHandler = (event) => {\r\n        for (let key in inputState) {\r\n            localStorage.removeItem(key);\r\n        }\r\n        setInputState({});\r\n        setCreateState(false);\r\n        setCreatable(true);\r\n        event.preventDefault();\r\n    };\r\n\r\n    const submitHandler = (event) => {\r\n        const id = buildings.length + 1;\r\n        const newBuilding = {id: id, ...inputState};\r\n        setBuildings([...buildings, newBuilding]);\r\n        for (let key in inputState) {\r\n            localStorage.removeItem(key);\r\n        }\r\n        setInputState({});\r\n        setCreateState(false);\r\n        setCreatable(true);\r\n        console.log(id);\r\n        event.preventDefault();\r\n    };\r\n    return(\r\n        <Layout>\r\n            <div>\r\n                <div id={'openForm'} style={{margin: '0 auto', width: '1px', height: '1px'}}/>\r\n                <Banner buildings={buildings}/>\r\n                <CreateButton toggle={toggleHandler} creatable={creatable}/>\r\n                <CreateForm\r\n                    open={createState || !creatable}\r\n                    changed={onChangeHandler}\r\n                    value={inputState}\r\n                    submit={submitHandler}\r\n                    discard={discardHandler}\r\n                    submitable={!creatable}\r\n                />\r\n            </div>\r\n        </Layout>\r\n    )\r\n};\r\nexport default cltDashboard;"],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7DA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZA;AAAA;AAAA;AACA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AAAA;;;;A","sourceRoot":""}